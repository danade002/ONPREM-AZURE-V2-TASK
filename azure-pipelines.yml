trigger:
  branches:
    include:
      - main
      - develop

pr:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  ARM_CLIENT_ID: $(AZURE_CLIENT_ID)
  ARM_CLIENT_SECRET: $(AZURE_CLIENT_SECRET)
  ARM_TENANT_ID: $(AZURE_TENANT_ID)
  ARM_SUBSCRIPTION_ID: $(AZURE_SUBSCRIPTION_ID)
  ADMIN_SSH_KEY: $(ADMIN_SSH_KEY)

jobs:
- job: terraform
  steps:
  - task: Checkout@v2
    displayName: 'Checkout code'

  - task: AzureCLI@2
    displayName: 'Azure Login'
    inputs:
      azureSubscription: 'AzureDevOpsConnection'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Logged into Azure"

  - task: UseTerraform@0
    displayName: 'Setup Terraform'
    inputs:
      terraformVersion: '1.8.2'

  - script: |
      echo $(ADMIN_SSH_KEY) > admin_ssh_key.pub
      ls -la
    displayName: 'Get Admin SSH Key'

  - script: |
      export ARM_CLIENT_ID=$(AZURE_CLIENT_ID)
      export ARM_CLIENT_SECRET=$(AZURE_CLIENT_SECRET)
      export ARM_TENANT_ID=$(AZURE_TENANT_ID)
      export ARM_SUBSCRIPTION_ID=$(AZURE_SUBSCRIPTION_ID)
      terraform init
    displayName: 'Terraform Init'

  - script: terraform fmt -recursive
    displayName: 'Terraform Format'

  - script: terraform validate
    displayName: 'Terraform Validate'

  - script: |
      export ARM_CLIENT_ID=$(AZURE_CLIENT_ID)
      export ARM_CLIENT_SECRET=$(AZURE_CLIENT_SECRET)
      export ARM_TENANT_ID=$(AZURE_TENANT_ID)
      export ARM_SUBSCRIPTION_ID=$(AZURE_SUBSCRIPTION_ID)
      export ADMIN_SSH_KEY=$(ADMIN_SSH_KEY)
      terraform plan -var-file='dev.tfvars'
    displayName: 'Terraform Plan'

  - script: |
      export ARM_CLIENT_ID=$(AZURE_CLIENT_ID)
      export ARM_CLIENT_SECRET=$(AZURE_CLIENT_SECRET)
      export ARM_TENANT_ID=$(AZURE_TENANT_ID)
      export ARM_SUBSCRIPTION_ID=$(AZURE_SUBSCRIPTION_ID)
      export ADMIN_SSH_KEY=$(ADMIN_SSH_KEY)
      terraform apply -var-file='dev.tfvars' -auto-approve
    displayName: 'Terraform Apply'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.Reason'], 'Manual'))

  - script: |
      export ARM_CLIENT_ID=$(AZURE_CLIENT_ID)
      export ARM_CLIENT_SECRET=$(AZURE_CLIENT_SECRET)
      export ARM_TENANT_ID=$(AZURE_TENANT_ID)
      export ARM_SUBSCRIPTION_ID=$(AZURE_SUBSCRIPTION_ID)
      export ADMIN_SSH_KEY=$(ADMIN_SSH_KEY)
      terraform destroy -var-file='dev.tfvars' -auto-approve
    displayName: 'Terraform Destroy'
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'), eq(variables['Build.Reason'], 'Manual'))
